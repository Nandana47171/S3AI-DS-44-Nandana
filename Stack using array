//program of stack using array

//Nandana Ramachandran_44

#include <stdio.h>
#include <stdlib.h>

#define MAX 5  
struct Stack {
    int arr[MAX];
    int top;
};


void initStack(struct Stack* stack) {
    stack->top = -1;  
}


int isFull(struct Stack* stack) {
    return stack->top == MAX - 1;
}


int isEmpty(struct Stack* stack) {
    return stack->top == -1;
}


void push(struct Stack* stack, int value) {
    if (isFull(stack)) {
        printf("Stack Overflow: Cannot push %d, stack is full.\n", value);
    } else {
        stack->arr[++(stack->top)] = value;
        printf("%d pushed to stack\n", value);
    }
}


int pop(struct Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack Underflow: Cannot pop, stack is empty.\n");
        return -1;  
    } else {
        int poppedValue = stack->arr[(stack->top)--];
        return poppedValue;
    }
}


int peek(struct Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty. Cannot peek.\n");
        return -1; 
    } else {
        return stack->arr[stack->top];
    }
}


void display(struct Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty.\n");
    } else {
        printf("Stack elements: ");
        for (int i = 0; i <= stack->top; i++) {
            printf("%d ", stack->arr[i]);
        }
        printf("\n");
    }
}


void menu() {
    printf("\nStack Operations Menu:\n");
    printf("1. Push\n");
    printf("2. Pop\n");
    printf("3. Peek\n");
    printf("4. Display\n");
    printf("5. Exit\n");
}

int main() {
    struct Stack stack;
    int choice, value;
    
    initStack(&stack);  
    
    do {
        menu();  
        printf("Enter your choice (1-5): ");
        scanf("%d", &choice);
        
        switch(choice) {
            case 1:  
                printf("Enter a value to push: ");
                scanf("%d", &value);
                push(&stack, value);
                break;
                
            case 2:  
                value = pop(&stack);
                if (value != -1) {
                    printf("Popped value: %d\n", value);
                }
                break;
                
            case 3:  
                value = peek(&stack);
                if (value != -1) {
                    printf("Top value: %d\n", value);
                }
                break;
                
            case 4:  
                display(&stack);
                break;
                
            case 5:  
                printf("Exiting the program.\n");
                break;
                
            default:
                printf("Invalid choice. Please enter a number between 1 and 5.\n");
        }
    } while (choice != 5);  
    
    return 0;
}







